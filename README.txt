# Lodoro Analytics

Sistema de an√°lisis y gesti√≥n de √≥rdenes para marketplaces (Paris, Ripley, Falabella, Mercado Libre) desarrollado en Django.

---

## üöÄ Caracter√≠sticas principales

- Dashboard de bienvenida con resumen de √≥rdenes por marketplace.
- An√°lisis de ventas y exportaci√≥n a Excel.
- Paginaci√≥n y filtros avanzados en las vistas de √≥rdenes.
- Despacho por escaneo de c√≥digo de barras (compatible con dispositivos m√≥viles).
- Gesti√≥n de usuarios y perfiles.
- Plantillas modernas y responsivas.
- Soporte para despliegue en Heroku y conexi√≥n a base de datos MySQL externa.

---

## üõ†Ô∏è Instalaci√≥n local

1. Clona el repositorio:
   git clone https://github.com/tu_usuario/tu_repo.git
   cd tu_repo

2. Crea y activa un entorno virtual:
   python -m venv venv
   source venv/bin/activate  # En Windows: venv\Scripts\activate

3. Instala las dependencias:
   pip install -r requirements.txt

4. Configura las variables de entorno:
   - Crea un archivo .env con tus credenciales de base de datos y otras variables sensibles.

5. Aplica migraciones y carga datos iniciales:
   python manage.py migrate
   python manage.py createsuperuser

6. Ejecuta el servidor:
   python manage.py runserver

---

## ‚öôÔ∏è Despliegue en Heroku

1. Agrega los buildpacks necesarios:
   heroku buildpacks:add --index 1 heroku/python --app <nombre-app>
   heroku buildpacks:add --index 2 https://github.com/heroku/heroku-buildpack-apt --app <nombre-app>

2. Configura las variables de entorno en Heroku:
   - DB_NAME, DB_USER, DB_PASSWORD, DB_HOST, DB_PORT, SECRET_KEY, etc.

3. Haz deploy:
   git push heroku main --app <nombre-app>

4. Ejecuta migraciones:
   heroku run python manage.py migrate --app <nombre-app>

---

## üì¶ Dependencias principales

- Django
- django-bootstrap5
- python-barcode
- Pillow
- MySQLclient
- whitenoise

---

## üì∏ Funcionalidades destacadas

- Dashboard: Resumen visual de √≥rdenes por marketplace.
- √ìrdenes: Filtros avanzados, paginaci√≥n y exportaci√≥n a Excel.
- Despacho por escaneo: Escaneo de c√≥digos de barras para marcar √≥rdenes como despachadas.
- Gesti√≥n de usuarios: Perfil, login/logout, permisos.

---

## üß™ Plan de pruebas

### Pruebas funcionales

1. Login y logout
   - [ ] El usuario puede iniciar y cerrar sesi√≥n correctamente.
   - [ ] El acceso a vistas protegidas redirige a login si no est√° autenticado.

2. Dashboard
   - [ ] Se muestra el resumen de √≥rdenes por marketplace.
   - [ ] Los datos reflejan correctamente el estado de la base de datos.

3. √ìrdenes
   - [ ] Se listan las √≥rdenes de cada marketplace.
   - [ ] La paginaci√≥n funciona correctamente.
   - [ ] Los filtros (estado, a√±o, impreso, etc.) funcionan y actualizan la vista.
   - [ ] La exportaci√≥n a Excel descarga el archivo correcto.

4. Despacho por escaneo
   - [ ] El esc√°ner de c√≥digo de barras funciona en dispositivos m√≥viles y escritorio.
   - [ ] Al escanear una orden v√°lida, se marca como despachada y muestra feedback.
   - [ ] Al escanear una orden inv√°lida, muestra mensaje de error.

5. Perfil de usuario
   - [ ] Se muestra la informaci√≥n relevante del usuario.
   - [ ] El usuario puede ver su historial de acceso.

6. Errores y UX
   - [ ] La p√°gina 404 personalizada aparece cuando corresponde.
   - [ ] El sidebar y men√∫ se ocultan correctamente en login y para usuarios no autenticados.

### Pruebas de integraci√≥n

- [ ] Conexi√≥n a base de datos MySQL externa desde Heroku.
- [ ] Generaci√≥n y visualizaci√≥n de c√≥digos de barras en Heroku.
- [ ] Manejo de archivos est√°ticos en producci√≥n (Heroku/WhiteNoise).

### Pruebas de seguridad

- [ ] No se puede acceder a vistas protegidas sin autenticaci√≥n.
- [ ] Las credenciales y datos sensibles no est√°n expuestos en el c√≥digo.

---

## üìû Soporte

Para dudas o soporte, contacta a: [tu_email@dominio.com] 